{
  "config": {
    "configFile": "/home/vik/oppspot/playwright.config.ts",
    "rootDir": "/home/vik/oppspot/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {},
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "list",
        null
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/vik/oppspot/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "chromium",
        "name": "chromium",
        "testDir": "/home/vik/oppspot/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/vik/oppspot/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "firefox",
        "name": "firefox",
        "testDir": "/home/vik/oppspot/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/vik/oppspot/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "webkit",
        "name": "webkit",
        "testDir": "/home/vik/oppspot/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/vik/oppspot/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/home/vik/oppspot/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/vik/oppspot/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/home/vik/oppspot/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.0",
    "workers": 8,
    "webServer": null
  },
  "suites": [],
  "errors": [
    {
      "message": "SyntaxError: /home/vik/oppspot/tests/email-notifications.spec.ts: Missing semicolon. (193:74)\n\n  191 |       await page.goto('/auth/reset-password?token=test-token')\n  192 |       \n> 193 |       await page.fill('input[type=\"password\"]').first(), 'NewPassword123!')\n      |                                                                           ^\n  194 |       await page.fill('input[placeholder*=\"Confirm\"]', 'DifferentPassword123!')\n  195 |       await page.click('button:has-text(\"Reset Password\")')\n  196 |       ",
      "stack": "SyntaxError: /home/vik/oppspot/tests/email-notifications.spec.ts: Missing semicolon. (193:74)\n\n  191 |       await page.goto('/auth/reset-password?token=test-token')\n  192 |       \n> 193 |       await page.fill('input[type=\"password\"]').first(), 'NewPassword123!')\n      |                                                                           ^\n  194 |       await page.fill('input[placeholder*=\"Confirm\"]', 'DifferentPassword123!')\n  195 |       await page.click('button:has-text(\"Reset Password\")')\n  196 |       ",
      "location": {
        "file": "/home/vik/oppspot/tests/email-notifications.spec.ts",
        "line": 193,
        "column": 74
      },
      "snippet": "\u001b[90m   at \u001b[39memail-notifications.spec.ts:193\n\n  191 |       await page.goto('/auth/reset-password?token=test-token')\n  192 |       \n> 193 |       await page.fill('input[type=\"password\"]').first(), 'NewPassword123!')\n      |                                                                          ^\n  194 |       await page.fill('input[placeholder*=\"Confirm\"]', 'DifferentPassword123!')\n  195 |       await page.click('button:has-text(\"Reset Password\")')\n  196 |       "
    }
  ],
  "stats": {
    "startTime": "2025-08-31T08:51:41.132Z",
    "duration": 103.39099999999996,
    "expected": 0,
    "skipped": 0,
    "unexpected": 0,
    "flaky": 0
  }
}